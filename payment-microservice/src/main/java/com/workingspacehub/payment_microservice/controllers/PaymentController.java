package com.workingspacehub.payment_microservice.controllers;


import com.stripe.exception.StripeException;
import com.stripe.model.checkout.Session;
import com.workingspacehub.payment_microservice.services.PaymentService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import java.util.Map;

@RestController
@RequestMapping("/payment")
public class PaymentController {

    private final PaymentService paymentService;

    @Autowired
    public PaymentController(PaymentService paymentService) {
        this.paymentService = paymentService;
    }

    @PostMapping("/create-checkout-session")
    public ResponseEntity<Map<String, String>> createCheckoutSession(@RequestParam String clientId, @RequestParam int amount) {
        return paymentService.createCheckoutSession(clientId, amount);
    }

    @GetMapping("/success")
    public ResponseEntity<String> paymentSuccess(@RequestParam String sessionId) {
        try {
            // üî• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Checkout Session
            Session session = Session.retrieve(sessionId);
            String clientId = session.getClientReferenceId();
            int amount = Integer.parseInt(session.getMetadata().get("amount"));

            System.out.println("‚úÖ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞! userId: " + clientId + ", amount: " + amount);
            paymentService.sendPaymentSuccess(clientId, amount); // ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Kafka

            return ResponseEntity.ok("–û–ø–ª–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
        } catch (StripeException e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–ª–∞—Ç–µ–∂–∞: " + e.getMessage());
        }
    }

    @GetMapping("/cancel")
    public ResponseEntity<String> paymentCancel() {
        return ResponseEntity.ok("–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
    }
}
